
- Conforme a aplicação vai crescendo, é normal querermos dividir a mesma em múltiplos arquivos, o que chamamos de módulos.
  Módulos podem conter uma classe, ou uma biblioteca de funções para um propósito específico.

- Diante disso, módulo é apenas um arquivo. Um script também é um módulo.

- Modulos podem "carregar" um ao outro e usar diretivas "especiais" de exportar/importar para interligar funcionalidades. Como por exemplo chamar uma função de um outro módulo a partir de um módulo.

- A "keyword" export cria a "etiqueta" de que variáveis e funções do módulo atual devem ser acessíveis fora desse módulo .

- A keyword import nos permite importar funcionalidades de outros módulos para o módulo/arquivo atual

- Módulos devem ser exportados se quisermos que ele seja acessível fora do mesmo (importado em outro arquivo)

- Para importarmos , devemos passar o caminho relativo do arquivo que queremos importar.


Sintaxe Import :

import {parteDoModulo} from 'caminho/caminho/arquivo.js' 

import modulo from 'caminho/caminho/arquivo.js' 



			************************************
			*                                  *
			*                                  *
			*	Como utilizar export       *
			*                                  *
			*                                  *
			************************************


- Podemos exportar antes de uma declaração . Seja ela uma variável, uma função ou uma classe :


	• Exportando uma variável que é um array :
	
	export let months = ['Jan', 'Feb', 'Mar','Apr', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];


	• Exportando uma variável que é uma constante :
	
	export const MODULES_BECAME_STANDARD_YEAR = 2015;



	• Exportando uma classe :

	export class User {
 			   constructor(name) {
   							 this.name = name;
  					     }
			  }


	• Exportando uma função : 

	export function sayHi(user) {
  					alert(`Hello, ${user}!`);
				   }


- Podemos exportar separadamente após a declaração : 

	function sayHi(user) {
 				 alert(`Hello, ${user}!`);
			     }

	function sayBye(user) {
				  alert(`Bye, ${user}!`);
			      }

	export {sayHi, sayBye}




- Exportando com um alias (apelido para a exportação) . Dessa forma esse alias se torna o nome oficial
  para ser utilizado na importação :


	function sayHi(user) {
 				 alert(`Hello, ${user}!`);
			     }

	function sayBye(user) {
				  alert(`Bye, ${user}!`);
			      }

	export {sayHi as hi, sayBye as bye}




- Export Default : 













			************************************
			*                                  *
			*                                  *
			*	Como utilizar import       *
			*                                  *
			*                                  *
			************************************