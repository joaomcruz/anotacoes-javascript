• Assim como objeto, o Map é uma coleção de dados em par chave : valor . A maior diferença é que as propriedades de um objeto
são sempre string, enquanto que o Map permite propriedade de qualquer tipo.

• Ao contrário de objetos e arrays que acessamos, mudamos valores e etc com uma notação mais simples, o ideal com Maps
é sempre utilizarmos os métodos disponíveis

• Para compararmos propriedades de maps, NaN é considerado igual à NaN. Por conta disso, NaN pode ser utilizado como propriedade também


	  *******************************************
	  *                                         *
	  *  Sintaxe / Estrutura :  Criando um Map  *
	  *                                         *
	  *                                         *
	  *******************************************

           • Para criarmos um Map basta utilizarmos a palavra new Map() e associarmos isso à uma variável

	   let map = new Map();



	  *****************************************************************
	  *          	                                                  *
	  *  Sintaxe / Estrutura :  Adicionando/Alterando item em um Map  *
	  *                                                    		  *
	  *	                                                          *
	  *****************************************************************

	   • Para isso possuímos o método .set que recebe como parâmetros a chave/propriedade e o valor que queremos adicionar/alterar
	     sendo a sintaxe nomeDoMap.set(chave,valor)

	   • Como dito anteriormente, o map aceita qualquer tipo de valor como propriedade.
  
           • O método .set pode ser encadeado

	   let map = new Map()
		
	   map.set(1, 'str1')
	   map.set('2', true)
	   map.set(true,true)
		
		
	  **************************************************************************
	  *          	                                                           *
	  *  Sintaxe / Estrutura :  Retornando valor de uma propriedade de um Map  *
	  *                                                    		           *
	  *	                                                                   *
	  **************************************************************************

	   • Para retornarmos o valor de um item a partir da sua propriedade usamos o método .get . 
	     Esse método retornará undefined caso a propriedade/chave não exista no map.

	   let map = new Map()
		
	   map.set(1, 'str1')
	
           console.log(map.get(1)) // retornará "str1"



	  *********************************************************************************
	  *          	                                                                  *
	  *  Sintaxe / Estrutura :  Retornando a existência de uma propriedade de um Map  *
	  *                                                    		                  *
    	  *	                                                                          *
	  *********************************************************************************

	  • Para retornarmos a existência ou não de uma determinada propriedade de um map, 
	    basta usarmos o método .has que recebe a propriedade como parâmetro . Retorna verdadeiro ou falso.

	   let map = new Map()
		
	   map.set(1, 'str1')

	   console.log(map.has("1")) // Retornará falso, pois a string 1 não existe no mapa definido acima.


	  ***********************************************************************************************
	  *          	                                                                                *
	  *  Sintaxe / Estrutura :  Deletando um elemento (propriedade : valor) através da propriedade  *
	  *                                                    		                                *
    	  *	                                                                                        *
	  ***********************************************************************************************

	  • Para deletarmos o par propriedade : valor de um map basta utilizarmos o método .delete passando como
	    parâmetro da função a propriedade.

	   let map = new Map()
		
	   map.set(1, 'str1')
           map.set(2, 'str2')
	   console.log(map) // retorna (1 : 'str1' , 2 : 'str2')
	   map.delete(1) 
	   console.log(map) // retorna (2 : 'str2')

	

	  *****************************************************************
	  *          	                                                  *
	  *  Sintaxe / Estrutura :  Removendo todos elementos de um map   *
	  *                                                    		  *
    	  *	                                                          *
	  *****************************************************************

	  • Para remover todos os elementos / limpar um map basta chamarmos a função .clear sobre o map.

	
	   let map = new Map()
		
	   map.set(1, 'str1')
           map.set(2, 'str2')
	   console.log(map) // Retorna {1 => 'str1', 2 => 'str2'}
	   map.clear()
	   console.log(map) // Retorna {} 


	  *****************************************************************
	  *          	                                                  *
	  *  Sintaxe / Estrutura :  Pegando o tamanho de um map           *
	  *                                                    		  *
    	  *	                                                          *
	  *****************************************************************

          • Para pegarmos o tamanho de um map basta utilizarmos a função .size sobre o map.

  	   let map = new Map()
		
	   map.set(1, 'str1')
           map.set(2, 'str2')
	   console.log(map.size()) // Retornará 2

		

