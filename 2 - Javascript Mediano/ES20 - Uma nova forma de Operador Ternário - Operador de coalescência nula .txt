		******************************************************************************************
		*											 *
		*	Operador de Coalescência Nula - O "novo" operador ternário			 *
		*											 *
		*											 *
		******************************************************************************************

• O operador de coalescência nula (??) é um operador lógico que retorna o seu operando do lado direito quando o seu operador do lado esquerdo é null ou undefined

• É como se fosse o operador ternário, pois retorna o valor à direita quando o operador do lado esquerdo for null/undefined. 
  Caso contrário retorna o valor a esquerda do operando

• Ao contrário do operador lógico OR (||) , o operando esquerdo é retornado se houver um valor falsy(falso) que não seja null/undefined.

• Tem como sintaxe então : exprEsq ?? exprDir




		const foo = null ?? 'default string'
		
		console.log(foo) // "default string"

		const baz = 0 ?? 42;
		
		console.log(baz) //  0



• A diferença do || para o ?? é que se um valor for apenas falsy -e não null/undefined explicitamente-
  (como 0,'',NaN, null,undefined) ele irá retornar o lado direito.


		let myText = "" // Uma string vazia (que também é um valor falseável)

		let notFalsyText = myText || "Olá mundo";

		console.log(notFalsyText); // Olá mundo

		let preservingFalsy = myText ?? "Olá vizinhança"

		console.log(preservingFalsy); // '' (Pois myText não é undefined e nem null)
